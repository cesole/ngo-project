{"changed":true,"filter":false,"title":"views.py","tooltip":"/checkout/views.py","value":"from django.shortcuts import render, get_object_or_404, reverse, redirect\nfrom django.contrib.auth.decorators import login_required\nfrom django.contrib import messages\nfrom .forms import MakePaymentForm, OrderForm\nfrom .models import OrderLineItem, Order\nfrom django.conf import settings\nfrom django.utils import timezone\nfrom children.models import Child\nimport stripe\n\n# Create your views here.\nstripe.api_key = settings.STRIPE_SECRET\n\n\n@login_required()\ndef checkout(request):\n    if request.method == \"POST\":\n        order_form = OrderForm(request.POST)\n        payment_form = MakePaymentForm(request.POST)\n\n        if order_form.is_valid() and payment_form.is_valid():\n            order = order_form.save(commit=False)\n            order.date = timezone.now()\n            order.save()\n\n            cart = request.session.get('cart', {})\n            total = 0\n            for id, donation in cart.items():\n                child = get_object_or_404(Child, pk=id)\n                total += donation \n                orderlineitem = OrderLineItem(\n                    order=order,\n                    child=child,\n                    donation=donation\n                )\n                orderlineitem.save()\n            \n            try:\n                customer = stripe.Charge.create(\n                    amount=int(total * 100),\n                    currency=\"EUR\",\n                    description=request.user.email,\n                    card=payment_form.cleaned_data['stripe_id']\n                )\n            except stripe.error.CardError:\n                messages.error(request, \"Your card was declined!\")\n            \n            if customer.paid:\n                messages.error(request, \"You have successfully paid\")\n                request.session['cart'] = {}\n                return redirect(reverse('children'))\n            else:\n                messages.error(request, \"Unable to take payment\")\n        else:\n            print(payment_form.errors)\n            messages.error(request, \"We were unable to take a payment with that card!\")\n    else:\n        payment_form = MakePaymentForm()\n        order_form = OrderForm()\n    \n    return render(request, \"checkout.html\", {\"order_form\": order_form, \"payment_form\": payment_form, \"publishable\": settings.STRIPE_PUBLISHABLE})","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":146.734375,"scrollleft":0,"selection":{"start":{"row":35,"column":36},"end":{"row":35,"column":36},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":11,"state":"start","mode":"ace/mode/python"}},"timestamp":1572862835622}